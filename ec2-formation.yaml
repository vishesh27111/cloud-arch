AWSTemplateFormatVersion: 2010-09-09
Description: 'EC2 Instance with React App Deployment'

Resources: 
  MyEC2Instance: 
    Type: AWS::EC2::Instance
    Properties:
      Tags:
      - Key: Name
        Value: 'App'
      KeyName: e-com-key
      ImageId: ami-0b72821e2f351e396
      InstanceType: 't3.medium'
      Monitoring: true
      SecurityGroupIds:
      - sg-0130536eca9ca846c
      SubnetId: subnet-0a1b3099b0908f25a
      BlockDeviceMappings:
      -
        DeviceName: "/dev/sda1"
        Ebs:
          Encrypted: false
          VolumeSize: 16
          SnapshotId: "snap-0d4808a4a367518ba"
          VolumeType: "gp3"
          DeleteOnTermination: true
      HibernationOptions:
        Configured: false
      CpuOptions:
        CoreCount: 1
        ThreadsPerCore: 2
      EnclaveOptions:
        Enabled: false
      UserData:
        Fn::Base64: !Sub |
          #!/bin/bash
          # Update the package index
          sudo yum update -y
          
          # Install Node.js, npm, and Git
          sudo amazon-linux-extras install -y epel
          sudo yum install -y nodejs npm git nginx

          # Configure Nginx
          sudo mkdir -p /var/www/html/frontend
          echo 'server {
            listen 80;
            listen [::]:80;
            root /var/www/html/frontend/build;

            # React app
            location / {
              try_files $uri /index.html;
            }
          }' | sudo tee /etc/nginx/conf.d/react.conf >/dev/null

          # Clone the repository and build the project
          cd /home/ec2-user
          git clone https://github.com/vishesh27111/cloud-arch.git
          cd cloud-arch
          npm install
          npm run build
          sudo cp -R build/ /var/www/html/frontend/
          
          # Update Nginx configuration and restart the service
          echo '
          user nginx;
          worker_processes auto;
          pid /run/nginx.pid;
          include /etc/nginx/modules-enabled/*.conf;

          events {
            worker_connections 768;
          }

          http {
            sendfile on;
            tcp_nopush on;
            tcp_nodelay on;
            keepalive_timeout 65;
            types_hash_max_size 2048;

            include /etc/nginx/mime.types;
            default_type application/octet-stream;

            ssl_protocols TLSv1 TLSv1.1 TLSv1.2 TLSv1.3; # Dropping SSLv3, ref: POODLE
            ssl_prefer_server_ciphers on;

            access_log /var/log/nginx/access.log;
            error_log /var/log/nginx/error.log;

            gzip on;

            include /etc/nginx/conf.d/*.conf;
          }' | sudo tee /etc/nginx/nginx.conf >/dev/null
          sudo systemctl enable nginx
          sudo systemctl start nginx

  EC2CPUUtilizationAlarm:
    Type: 'AWS::CloudWatch::Alarm'
    Properties:
      AlarmName: 'EC2-CPU-Utilization-High'
      AlarmDescription: 'Alarm when EC2 CPU Utilization exceeds 80%'
      Namespace: 'AWS/EC2'
      MetricName: 'CPUUtilization'
      Dimensions:
        - Name: InstanceId
          Value: !Ref MyEC2Instance
      Statistic: 'Average'
      Period: '300'
      EvaluationPeriods: '1'
      Threshold: '80'
      ComparisonOperator: 'GreaterThanThreshold'
      AlarmActions:
        - 'arn:aws:sns:us-east-1:123456789012:NotifyMe'
      OKActions:
        - 'arn:aws:sns:us-east-1:123456789012:NotifyMe'
      InsufficientDataActions:
        - 'arn:aws:sns:us-east-1:123456789012:NotifyMe'
